<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JBang on Middle of Nowhere</title><link>/tags/jbang/</link><description>Recent content in JBang on Middle of Nowhere</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 01 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/jbang/index.xml" rel="self" type="application/rss+xml"/><item><title>AWK in Java with JBang!</title><link>/posts/2022/03/01/awk-in-java-with-jbang/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>/posts/2022/03/01/awk-in-java-with-jbang/</guid><description>&lt;p>A few days ago I learned about &lt;a href="https://github.com/CZ-NIC/pz" target="_blank" rel="noopener">&lt;code>pz&lt;/code>&lt;/a>. A Python library that exposes a few simple one-letter shorthands for line-based editing of pipes at the command-line. I immediately thought there could be potential.&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">This is simple and clever. The default `s` variable holds the contents of stdin. &lt;a href="https://twitter.com/jbangdev?ref_src=twsrc%5Etfw">@jbangdev&lt;/a> idea? ðŸ¤”&lt;a href="https://t.co/pBBcIfEIJb">https://t.co/pBBcIfEIJb&lt;/a>&lt;/p>&amp;mdash; Edoardo Vacchi (@evacchi) &lt;a href="https://twitter.com/evacchi/status/1492559555292766219?ref_src=twsrc%5Etfw">February 12, 2022&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>I liked the idea so I pestered &lt;a href="https://twitter.com/maxandersen" target="_blank" rel="noopener">Max Andersen&lt;/a>: what if &lt;a href="https://jbang.dev" target="_blank" rel="noopener">JBang&lt;/a> supported that kind of shorthand syntax? It turned out Max was already working on something:&lt;/p></description></item><item><title>Type You An Actor Runtime For Greater Good! (with Java 17, records, switch expressions and JBang)</title><link>/posts/2022/02/13/type-you-an-actor-runtime-for-greater-good-with-java-17-records-switch-expressions-and-jbang/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>/posts/2022/02/13/type-you-an-actor-runtime-for-greater-good-with-java-17-records-switch-expressions-and-jbang/</guid><description>&lt;p>&lt;em>This blog post was originally published at the &lt;a href="https://www.javaadvent.com/2021/12/type-you-an-actor-runtime-for-greater-good-with-java-17-records-switch-expressions-and-jbang.html" target="_blank" rel="noopener">Java Advent Calendar 2021&lt;/a>&lt;/em>, so pardon all the festive references. &lt;a href="https://it.wikipedia.org/wiki/Panettone#Varianti" target="_blank" rel="noopener">San Biagio&lt;/a> was just a few days ago, but if that really bothers you, you can mentally replace all references to Panettone with &lt;a href="https://it.wikipedia.org/wiki/Frittella" target="_blank" rel="noopener">Tortelli alla crema&lt;/a> e &lt;a href="https://it.wikipedia.org/wiki/Chiacchiere" target="_blank" rel="noopener">chiacchiere&lt;/a> di &lt;a href="https://en.wikipedia.org/wiki/Carnival" target="_blank" rel="noopener">Carnevale&lt;/a>.&lt;/p>
&lt;p>The festive season is that period of the year when they tempt you to indulge in those dear sweet, sugary treats.&lt;/p>
&lt;div style="float:right">
&lt;img src="/assets/actor-3/shakespeare.png" alt="Whimsical sketch of Shakespeare" />
&lt;/div>
&lt;p>Personally, as an Italian, I do love me some &lt;a href="https://en.wikipedia.org/wiki/Panettone" target="_blank" rel="noopener">panettone&lt;/a>. And as much as I enjoy the bitter taste of Java coffee, I have been enjoying the sugar that has been introduced in the most recent versions. Indeed, I believe that Java 17 really hits the sweet spot, when it comes to treats. So what better time of the year to indulge in Java&amp;rsquo;s sweet, sweet sugar than this December?&lt;/p></description></item><item><title>Write You A Chat For Great Good! (with Java 17, actors, and JBang!)</title><link>/posts/2021/11/16/write-you-a-chat-for-great-good-with-java-17-actors-and-jbang/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021/11/16/write-you-a-chat-for-great-good-with-java-17-actors-and-jbang/</guid><description>&lt;p>Hello!&lt;/p>
&lt;p>Welcome back to &lt;a href="https://evacchi.github.io/java/records/jbang/2021/10/12/learn-you-an-actor-system-java-17-switch-expressions.html" target="_blank" rel="noopener">&amp;ldquo;Learn You An Actor (System) For Great Good!&amp;rdquo;&lt;/a>. If you haven&amp;rsquo;t read &lt;a href="https://evacchi.github.io/java/records/jbang/2021/10/12/learn-you-an-actor-system-java-17-switch-expressions.html" target="_blank" rel="noopener">the first part&lt;/a>, jump there to learn how to write a &lt;a href="https://evacchi.github.io/java/records/jbang/2021/10/12/learn-you-an-actor-system-java-17-switch-expressions.html" target="_blank" rel="noopener">minimalistic actor runtime using Java 17&lt;/a>.&lt;/p>
&lt;p>As promised, in this second part I am showing how to write a tiny chat client/server &lt;a href="https://evacchi.github.io/java/records/jbang/2021/10/12/learn-you-an-actor-system-java-17-switch-expressions.html" target="_blank" rel="noopener">using the runtime we wrote&lt;/a>. Then, we will run it using &lt;a href="https://jbang.dev" target="_blank" rel="noopener">JBang!&lt;/a> Next time, we will learn how to create a &lt;strong>typed&lt;/strong> version of the same actor runtime and revisit the examples!&lt;/p></description></item><item><title>Learn You An Actor (System) For Great Good! (with Java 17, records, switch expressions and JBang)</title><link>/posts/2021/10/12/learn-you-an-actor-system-for-great-good-with-java-17-records-switch-expressions-and-jbang/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>/posts/2021/10/12/learn-you-an-actor-system-for-great-good-with-java-17-records-switch-expressions-and-jbang/</guid><description>&lt;p>In 2012, &lt;a href="https://viktorklang.com/" target="_blank" rel="noopener">Viktor Klang&lt;/a> published a &lt;a href="https://gist.github.com/viktorklang/2557678" target="_blank" rel="noopener">tiny Java snippet&lt;/a> that implemented a tiny actor system in about&lt;br>
about 20 lines of code; a few years later, &lt;a href="https://gist.github.com/viktorklang/2362563" target="_blank" rel="noopener">a revised version&lt;/a> showed how to do the same in Scala.&lt;/p>
&lt;div style="float:right">
&lt;img src="/assets/actor/shakespeare.jpg" alt="Whimsical sketch of Shakespeare" />
&lt;/div>
&lt;p>I think untyped actors in the style of &lt;a href="https://doc.akka.io/docs/akka/current/actors.html" target="_blank" rel="noopener">Akka Classic&lt;/a> have always felt clunky in Java;
Java used to lack a way to express pattern matching concisely.
However, a few days ago I realized that Java 17 provides enough syntactic sugar
to write shorter actors:&lt;/p></description></item></channel></rss>