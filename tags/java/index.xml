<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Middle of Nowhere</title><link>/tags/java/</link><description>Recent content in Java on Middle of Nowhere</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 23 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>WebAssembly for the Java Geek</title><link>/posts/2022/12/23/webassembly-for-the-java-geek/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>/posts/2022/12/23/webassembly-for-the-java-geek/</guid><description>Update (Aug 3, 2023). This post was originally published at JVM Advent. If you want to read a more comprehensive guide to language VMs, I strongly recommend Chris Dickinson's series and especially part 2. If you want see a recorded, more recent version of this content, check out my JNation talk. When many Java developers hear the word WebAssembly, the first thing they think is “browser technology”. The second thing: “it’s the JVM all over again”.</description></item><item><title>Type You An Actor Runtime For Greater Good! (with Java 17, records, switch expressions and JBang)</title><link>/posts/2022/02/13/type-you-an-actor-runtime-for-greater-good-with-java-17-records-switch-expressions-and-jbang/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>/posts/2022/02/13/type-you-an-actor-runtime-for-greater-good-with-java-17-records-switch-expressions-and-jbang/</guid><description>This blog post was originally published at the Java Advent Calendar 2021, so pardon all the festive references. San Biagio was just a few days ago, but if that really bothers you, you can mentally replace all references to Panettone with Tortelli alla crema e chiacchiere di Carnevale.
The festive season is that period of the year when they tempt you to indulge in those dear sweet, sugary treats.
Personally, as an Italian, I do love me some panettone.</description></item><item><title>Write You A Chat For Great Good! (with Java 17, actors, and JBang!)</title><link>/posts/2021/11/16/write-you-a-chat-for-great-good-with-java-17-actors-and-jbang/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021/11/16/write-you-a-chat-for-great-good-with-java-17-actors-and-jbang/</guid><description>Hello!
Welcome back to &amp;ldquo;Learn You An Actor (System) For Great Good!&amp;rdquo;. If you haven&amp;rsquo;t read the first part, jump there to learn how to write a minimalistic actor runtime using Java 17.
As promised, in this second part I am showing how to write a tiny chat client/server using the runtime we wrote. Then, we will run it using JBang! Next time, we will learn how to create a typed version of the same actor runtime and revisit the examples!</description></item><item><title>Learn You An Actor (System) For Great Good! (with Java 17, records, switch expressions and JBang)</title><link>/posts/2021/10/12/learn-you-an-actor-system-for-great-good-with-java-17-records-switch-expressions-and-jbang/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>/posts/2021/10/12/learn-you-an-actor-system-for-great-good-with-java-17-records-switch-expressions-and-jbang/</guid><description>In 2012, Viktor Klang published a tiny Java snippet that implemented a tiny actor system in about
about 20 lines of code; a few years later, a revised version showed how to do the same in Scala.
I think untyped actors in the style of Akka Classic have always felt clunky in Java; Java used to lack a way to express pattern matching concisely. However, a few days ago I realized that Java 17 provides enough syntactic sugar to write shorter actors:</description></item></channel></rss>