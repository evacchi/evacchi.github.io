<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LLVM on Middle of Nowhere</title><link>/tags/llvm/</link><description>Recent content in LLVM on Middle of Nowhere</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 28 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/llvm/index.xml" rel="self" type="application/rss+xml"/><item><title>Writing Envoy WASM Filters The Hardest Way (Part 2): LLVM IR</title><link>/posts/2022/04/28/writing-envoy-wasm-filters-the-hardest-way-part-2-llvm-ir/</link><pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate><guid>/posts/2022/04/28/writing-envoy-wasm-filters-the-hardest-way-part-2-llvm-ir/</guid><description>&lt;p&gt;Welcome to the next installment of the &amp;ldquo;Writing Envoy WASM Filters The Hardest Way&amp;rdquo; franchise. In this episode,
our silly hero has decided to put together the lessons learned in the &lt;a href="/llvm/wasm/wasi/2022/04/14/compiling-llvm-ir-into-wasm.html"&gt;previous&lt;/a&gt; &lt;a href="/envoy/wasm/wat/2022/04/23/envoy-wasm-filters-the-hardest-way-using-wat.html"&gt;episodes&lt;/a&gt; and define an
&lt;a href="https://www.envoyproxy.io/docs/envoy/latest/start/sandboxes/wasm-cc" target="_blank" rel="noopener"&gt;Envoy WASM filter&lt;/a&gt; using only LLVM IR, &lt;a href="https://xkcd.com/378/" target="_blank" rel="noopener"&gt;a magnetized needle, and a steady hand&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now that we have figured out &lt;a href="/envoy/wasm/wat/2022/04/23/envoy-wasm-filters-the-hardest-way-using-wat.html"&gt;how to write a WASM filter from scratch&lt;/a&gt;,
the jump to LLVM IR is far smaller. We can write a source file &lt;code&gt;llvm.ll&lt;/code&gt;
that maps onto the correct WASM ABI pretty easily.&lt;/p&gt;</description></item><item><title>Compiling LLVM IR into WebAssembly with WASI support</title><link>/posts/2022/04/14/compiling-llvm-ir-into-webassembly-with-wasi-support/</link><pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate><guid>/posts/2022/04/14/compiling-llvm-ir-into-webassembly-with-wasi-support/</guid><description>&lt;p&gt;I have been experimenting a little bit with LLVM and its WASM backend. Unfortunately, although it is easy to find examples on how to compile a &amp;ldquo;hello world&amp;rdquo; using C, resources are a bit scattered when it comes to doing something a little more specific like &lt;strong&gt;compiling LLVM IR into WASM&lt;/strong&gt; with &lt;a href="https://wasi.dev/" target="_blank" rel="noopener"&gt;WASI support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I found &lt;a href="https://surma.dev/things/c-to-webassembly/" target="_blank" rel="noopener"&gt;Surma&amp;rsquo;s article on how to compile C into WASM from scratch&lt;/a&gt; to be a very valuable resource, and &lt;a href="https://00f.net/2019/04/07/compiling-to-webassembly-with-llvm-and-clang/" target="_blank" rel="noopener"&gt;Frank Denis&amp;rsquo;s article on Compiling C to WebAssembly using clang/LLVM and WASI&lt;/a&gt; was especially useful, even though it is now a bit outdated.&lt;/p&gt;</description></item></channel></rss>